syntax = "proto3";

package io.restorecommerce.access_control;

import "google/protobuf/any.proto";
import "io/restorecommerce/rule.proto";
import "io/restorecommerce/policy_set.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/attribute.proto";
import "io/restorecommerce/options.proto";

/**
* Access control service interface.
*/

message Request {
  optional io.restorecommerce.rule.Target target = 1;
  // generic data structure which can be provided
  // to a contextQuery (see io/restorecommerce/rule.proto)
  optional Context context = 2;
}

message Context {
  optional google.protobuf.Any subject = 1;
  repeated google.protobuf.Any resources = 2;
  optional google.protobuf.Any security = 3;
}

message Response {
  enum Decision {
    DENY = 0;
    PERMIT = 1;
    NOT_APPLICABLE = 2;
    INDETERMINATE = 3;
  }
  optional Decision decision = 1;
  repeated io.restorecommerce.attribute.Attribute obligations = 2;
  optional bool evaluation_cacheable = 3;
  optional io.restorecommerce.status.OperationStatus operation_status = 4;
}

message ReverseQuery {
  repeated io.restorecommerce.policy_set.PolicySetRQ policy_sets = 1;
  repeated io.restorecommerce.attribute.Attribute obligations = 2;
  optional io.restorecommerce.status.OperationStatus operation_status = 3;
}

service AccessControlService {
  rpc IsAllowed (Request) returns (Response) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc WhatIsAllowed(Request) returns (ReverseQuery) {
    option (io.restorecommerce.options.is_query) = true;
  };
}
