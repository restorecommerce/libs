syntax = "proto3";

package io.restorecommerce.address;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";

// Used by resolvers
import "io/restorecommerce/country.proto";

/*
* Microservice definition.
*/
service AddressService {
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (AddressListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (AddressList) returns (AddressListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc Update (AddressList) returns (AddressListResponse);
  rpc Upsert (AddressList) returns (AddressListResponse);
}

message Deleted {
  string id = 1;
}

message AddressList {
  repeated Address items = 1;
  optional uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message AddressListResponse {
  repeated AddressResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message AddressResponse {
  Address payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message GeoPoint {
  optional double latitude = 1;
  optional double longitude = 2;
}

message AddressAddition {
  optional string field1 = 1;
  optional string field2 = 2;
}

message BusinessAddress {
  optional string name = 1;
}

message ResidentialAddress {
  optional string title = 1;
  optional string given_name = 2;
  optional string mid_name = 3;
  optional string family_name = 4;
}

message PackStation {
  optional string provider = 1;
  optional string station_number = 2;
  optional string post_number = 3;
}

message Address {
  optional string id = 1;
  optional io.restorecommerce.meta.Meta meta = 2;
  optional string postcode = 3;
  optional string country_id = 4 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.country.Country",
      target_service: "master_data",
      target_sub_service: "country",
      target_method: "Read",
      field_name: "country",
    }
  ];
  optional string locality = 6;
  optional string street = 7;
  optional string region = 8;
  optional GeoPoint geo_coordinates = 9;
  optional double altitude = 10;
  optional string building_number = 11;
  optional AddressAddition address_addition = 12;
  oneof type {
    BusinessAddress business_address = 13;
    ResidentialAddress residential_address = 14;
    PackStation pack_station = 15;
  }
}

message Contact {
  optional string name = 1;
  optional string email = 2;
  optional string phone = 3;
}

message ShippingAddress {
  optional Address address = 1;
  optional Contact contact = 2;
  optional string comments = 3;
}

message BillingAddress {
  optional Address address = 1;
  optional Contact contact = 2;
  optional string comments = 3;
}