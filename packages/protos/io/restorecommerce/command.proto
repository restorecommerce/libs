syntax = "proto3";

package io.restorecommerce.command;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";

// command resource
message Command {
  optional string id = 1;
  optional io.restorecommerce.meta.Meta meta = 2;
  optional string name = 3;  // command name
  repeated CommandParameter parameters = 4; // all possible parameters
  optional string description = 5; // command description
}

message CommandParameter {
  enum ParameterType {
    boolean_value = 0;
    object_value = 1;
    array_value = 2;
    number_value = 3;
    string_value = 4;
  }

  optional string field = 1; //  field name
  optional string description = 2; // field description
  optional ParameterType type = 3; // field's type
  optional string properties = 4; // dump properties in case of `object_value``
}

message CommandList {
  repeated Command items = 1;
  optional uint32 total_count = 2;
  optional io.restorecommerce.auth.Subject subject = 3;
}

message CommandListResponse {
  repeated CommandResponse items = 1;
  optional uint32 total_count = 2;
  optional io.restorecommerce.status.OperationStatus operation_status = 3;
}

message CommandResponse {
  optional Command payload = 1;
  optional io.restorecommerce.status.Status status = 2;
}

service CommandService {
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (CommandListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (CommandList) returns (CommandListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc Update (CommandList) returns (CommandListResponse);
  rpc Upsert (CommandList) returns (CommandListResponse);
}
