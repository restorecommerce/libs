syntax = "proto3";

package io.restorecommerce.fulfillment;

import "google/protobuf/any.proto";
import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/address.proto";
import "io/restorecommerce/country.proto";
import "io/restorecommerce/product.proto";
import "io/restorecommerce/options.proto";

/**
Microservice definition.
*/
service FulfillmentService {
  option (io.restorecommerce.options.service_name) = "fulfillment";

  /**
   Returns a list of shipment IDs.
   */
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (FulfillmentListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };

  /**
  Creates fulfillment orders
  */
  rpc Create (FulfillmentList) returns (FulfillmentListResponse);

  /**
  Updates fulfillment orders unless Status is beyond Submit
  */
  rpc Update (FulfillmentList) returns (FulfillmentListResponse);

  /**
  Creates or Updates fulfillment orders unless Status is beyond Submit
  */
  rpc Upsert (FulfillmentList) returns (FulfillmentListResponse);

  /**
  Creates, Submits and Updates fulfillment orders against API
  */
  rpc Submit (FulfillmentList) returns (FulfillmentListResponse);

  /**
  Track a batch of fulfillments
  */
  rpc Track (FulfillmentIdList) returns (FulfillmentListResponse);

  /**
  Cancel a batch of fulfillments
  */
  rpc Cancel (FulfillmentIdList) returns (FulfillmentListResponse);

  /**
  Delete a batch of fulfillments from the database
  */
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
}

enum State {
  Undefined = 0;
  Invalid = 1;
  Failed = 2;
  Created = 3;
  Submitted = 4;
  Shipping = 5;
  Fulfilled = 6;
  Cancelled = 7;
}

message FulfillmentItem {
  string product_id = 1;
  string variant_id = 2;
  int32 quantity = 3;
  io.restorecommerce.product.Package package = 4;
}

message Parcel {
  string id = 1;
  string product_id = 2 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.fulfillment_product.FulfillmentProduct",
      target_service: "resource",
      target_sub_service: "fulfillment_product",
      target_method: "Read",
      field_name: "product",
    }
  ];
  string variant_id = 3;
  FulfillmentItem item = 4;
  io.restorecommerce.product.Package package = 11;
}

message Label {
  oneof type {
    string url = 1;
    string pdf = 2;
    string png = 3;
  }
  string parcel_id = 4;
  string shipment_number = 5; //filled on Order
  State state = 6; //update by Track
  io.restorecommerce.status.Status status = 7; //API status
}

message Packing {
  string reference_id = 1;
  repeated Parcel parcels = 2;
  io.restorecommerce.address.ShippingAddress sender = 3;
  io.restorecommerce.address.ShippingAddress receiver = 4;
  string notify = 5;
}

message Event {
  int64 timestamp = 1;
  string location = 2;
  google.protobuf.Any details = 3;
  io.restorecommerce.status.Status status = 4;
}

message Tracking {
  string shipment_number = 1;
  repeated Event events = 3;
  google.protobuf.Any details = 4;
  io.restorecommerce.status.Status status = 5;
}

/**
This is the message of how it get stored to the database
*/
message Fulfillment {
  option (restorecommerce.options.kafka_subscriber) = {
    plural: "fulfillments"
    topic: "io.restorecommerce.fulfillment.resource"
    created: "fulfillmentCreated"
    updated: "fulfillmentUpdated"
    deleted: "fulfillmentDeleted"
  };

  string id = 1;
  Packing packing = 2; //filled by user
  io.restorecommerce.meta.Meta meta = 3;
  repeated Label labels = 4; //filled by service
  repeated Tracking tracking = 5; //filled by service
  State state = 6; //filled by service
  double price = 7;
}

message FulfillmentList {
  repeated Fulfillment items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message FulfillmentResponse {
  Fulfillment payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message FulfillmentListResponse {
  repeated FulfillmentResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message FulfillmentId {
  string id = 1;
  repeated string shipment_numbers = 2; //optional
  google.protobuf.Any options = 3;
  io.restorecommerce.auth.Subject subject = 4;
}

message FulfillmentIdList {
  repeated FulfillmentId items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message Deleted {
  string id = 1;
}