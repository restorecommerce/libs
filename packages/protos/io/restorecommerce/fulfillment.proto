syntax = "proto3";

package io.restorecommerce.fulfillment;

import "google/protobuf/any.proto";
import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/address.proto";
import "io/restorecommerce/options.proto";

/**
Microservice definition.
*/
service Service {
  option (io.restorecommerce.options.service_name) = "fulfillment";

  /**
   Returns a list of shipment IDs.
   */
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (FulfillmentResponseList) {
    option (io.restorecommerce.options.is_query) = true;
  };

  /**
  Creates fulfillment orders
  */
  rpc Create (FulfillmentList) returns (FulfillmentResponseList);

  /**
  Updates fulfillment orders unless Status is beyond Ordered
  */
  rpc Update (FulfillmentList) returns (FulfillmentResponseList);

  /**
  Creates or Updates fulfillment orders unless Status is beyond Ordered
  */
  rpc Upsert (FulfillmentList) returns (FulfillmentResponseList);

  /**
  Creates, Executes and Updates fulfillment orders against API
  */
  rpc Submit (FulfillmentList) returns (FulfillmentResponseList);

  /**
  Track a batch of fulfillment orders
  */
  rpc Track (TrackingRequestList) returns (TrackingResultList) {
    option (io.restorecommerce.options.is_query) = true;
  };

  /**
  Cancel a batch of fulfillment orders
  */
  rpc Cancel (CancelRequestList) returns (FulfillmentResponseList);

  /**
  Delete a batch of fulfillments from the database
  */
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
}

enum State {
  Undefined = 0;
  Invalid = 1;
  Failed = 2;
  Cancelled = 3;
  Created = 4;
  Submitted = 5;
  Shipping = 6;
  Done = 7;
}

message ShippingAddress {
  io.restorecommerce.address.Address address = 1;
  io.restorecommerce.address.ContactPerson contact_person = 2;
}

message Item {
  //Catalog item!
  string item_id = 1;
  string name = 2;
  string description = 3;
  string taric_code = 4;
  int32 quantity = 5;
}

message Parcel {
  string product_id = 1 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.fulfillment_product.FulfillmentProduct",
      target_service: "resource",
      target_sub_service: "fulfillment_product",
      target_method: "Read",
      field_name: "product",
    }
  ];
  string product_variant_id = 2;
  repeated Item items = 3;
  float weight_in_kg = 4;
  float height_in_cm = 5;
  float width_in_cm = 6;
  float length_in_cm = 7;
}

message Label {
  oneof type {
    string url = 1;
    string pdf = 2;
    string png = 3;
  }
  string shipment_number = 4; //filled on Order
  State state = 5; //update by Track
  io.restorecommerce.status.Status status = 6; //API status
}

message Order {
  string reference_id = 1;
  repeated Parcel parcels = 2;
  ShippingAddress sender = 3;
  ShippingAddress receiver = 4;
  string notify = 5;
}

/**
This is the message how it get stored to the database
*/
message Fulfillment {
  option (restorecommerce.options.kafka_subscriber) = {
    plural: "fulfillment"
    topic: "io.restorecommerce.fulfillment.resource"
    created: "fulfillmentCreated"
    updated: "fulfillmentUpdated"
    deleted: "fulfillmentDeleted"
  };

  string id = 1;
  Order order = 2;
  io.restorecommerce.meta.Meta meta = 3;
  repeated Label labels = 4; //filled by service
  State state = 5;
}

message FulfillmentList {
  repeated Fulfillment items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message FulfillmentResponse {
  Fulfillment payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message FulfillmentResponseList {
  repeated FulfillmentResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message TrackingRequest {
  string fulfillment_id = 1;
  repeated string shipment_numbers = 2; //optional
  google.protobuf.Any options = 3;
}

message TrackingRequestList {
  repeated TrackingRequest items = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message Event {
  int64 timestamp = 1;
  string location = 2;
  google.protobuf.Any details = 3;
  io.restorecommerce.status.Status status = 4;
}

message Tracking {
  string shipment_number = 1;
  repeated Event events = 3;
  google.protobuf.Any details = 4;
  io.restorecommerce.status.Status status = 5;
}

message TrackingResult {
  Fulfillment fulfillment = 1 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.fulfillment.Fulfillment",
      target_service: "resource",
      target_sub_service: "fulfillment",
      target_method: "Read",
      field_name: "fulfillment",
    }
  ];
  repeated Tracking tracks = 2;
  io.restorecommerce.status.Status status = 3;
}

message TrackingResultList {
  repeated TrackingResult items = 1;
  io.restorecommerce.status.OperationStatus operation_status = 2;
}

message CancelRequestList {
  repeated string ids = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message Deleted {
  string id = 1;
}

