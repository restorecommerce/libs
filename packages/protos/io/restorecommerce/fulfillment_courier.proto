syntax = "proto3";

package io.restorecommerce.fulfillment_courier;

import "google/protobuf/any.proto";
import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";

/**
Microservice defination
*/

service FulfillmentCourierService {
  option (io.restorecommerce.options.service_name) = "fulfillment_courier";

  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (FulfillmentCourierListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (FulfillmentCourierList) returns (FulfillmentCourierListResponse);
  rpc Update (FulfillmentCourierList) returns (FulfillmentCourierListResponse);
  rpc Upsert (FulfillmentCourierList) returns (FulfillmentCourierListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
}

message FulfillmentCourier {
  option (restorecommerce.options.kafka_subscriber) = {
    plural: "fulfillmentCouriers"
    topic: "io.restorecommerce.fulfillment_courier.resource"
    created: "fulfillmentCourierCreated"
    updated: "fulfillmentCourierUpdated"
    deleted: "fulfillmentCourierDeleted"
  };

  string id = 1;
  string name = 4;
  string description = 5;
  string logo = 6;
  string website = 7;
  string stub_type = 8;
  google.protobuf.Any configuration = 10;
  io.restorecommerce.meta.Meta meta = 11;
}

message FulfillmentCourierList {
  repeated FulfillmentCourier items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message FulfillmentCourierResponse {
  FulfillmentCourier payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message FulfillmentCourierListResponse {
  repeated FulfillmentCourierResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message Deleted {
  string id = 1;
}

