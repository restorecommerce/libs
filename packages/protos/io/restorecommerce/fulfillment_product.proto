syntax = "proto3";

package io.restorecommerce.fulfillment_product;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/attribute.proto";
import "io/restorecommerce/fulfillment_courier.proto";
import "io/restorecommerce/fulfillment.proto";

/**
Microservice defination
*/

service Service {
  option (io.restorecommerce.options.service_name) = "fulfillment_product";

  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (FulfillmentProductResponseList) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Find (QueryList) returns (PackingSolutionResponseList) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (FulfillmentProductList) returns (FulfillmentProductResponseList);
  rpc Update (FulfillmentProductList) returns (FulfillmentProductResponseList);
  rpc Upsert (FulfillmentProductList) returns (FulfillmentProductResponseList);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
}

message Preferences {
  repeated io.restorecommerce.attribute.Attribute couriers = 1; //ID, name or type
  float pricing = 2;
  float compactness = 3;
  float homogeneity = 4;
}

message Query {
  io.restorecommerce.fulfillment.Address sender = 1;
  io.restorecommerce.fulfillment.Address receiver = 2;
  repeated io.restorecommerce.fulfillment.Item goods = 3;
  Preferences preferences = 4;
  string reference_id = 5;
}

message QueryList {
  repeated Query items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message FulfillmentProduct {
  option (restorecommerce.options.kafka_subscriber) = {
    plural: "fulfillmentProduct"
    topic: "io.restorecommerce.fulfillment_product.resource"
    created: "fulfillmentProductCreated"
    updated: "fulfillmentProductUpdated"
    deleted: "fulfillmentProductDeleted"
  };

  string id = 1;
  string name = 2;
  string description = 3;
  string courier_id = 4 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.fulfillment_courier.FulfillmentCourier",
      target_service: "resource",
      target_sub_service: "fulfillment_courier",
      target_method: "Read",
      field_name: "courier",
    }
  ];
  repeated string start_zones = 6;
  repeated string destination_zones = 8;
  repeated string tax_ids = 9;
  repeated io.restorecommerce.attribute.Attribute attributes = 10;
  repeated Variant variants = 11;
  io.restorecommerce.meta.Meta meta = 12;
}

message Variant {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  double max_weight = 5;
  double max_width = 6;
  double max_height = 7;
  double max_length = 8;
  double max_volume = 9;
}

message FulfillmentProductList {
  repeated FulfillmentProduct items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message FulfillmentProductResponse {
  FulfillmentProduct payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message FulfillmentProductResponseList {
  repeated FulfillmentProductResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message PackingSolution {
  string reference_id = 1;
  float price = 2;
  float compactness = 3;
  float homogeneity = 4;
  float score = 5;
  repeated io.restorecommerce.fulfillment.Parcel parcels = 6;
}

message PackingSolutionResponse {
  repeated PackingSolution solutions = 1;
  io.restorecommerce.status.Status status = 2;
}

message PackingSolutionResponseList {
  repeated PackingSolutionResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message Deleted {
  string id = 1;
}