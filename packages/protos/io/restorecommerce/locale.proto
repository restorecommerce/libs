syntax = "proto3";

package io.restorecommerce.locale;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";

/*
* Microservice definition.
*/
service LocaleService {
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (LocaleListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (LocaleList) returns (LocaleListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc Update (LocaleList) returns (LocaleListResponse);
  rpc Upsert (LocaleList) returns (LocaleListResponse);
}

message Deleted {
  optional string id = 1;
}

message LocaleList {
  repeated Locale items = 1;
  optional uint32 total_count = 2;
  optional io.restorecommerce.auth.Subject subject = 3;
}

message LocaleListResponse {
  repeated LocaleResponse items = 1;
  optional uint32 total_count = 2;
  optional io.restorecommerce.status.OperationStatus operation_status = 3;
}

message LocaleResponse {
  optional Locale payload = 1;
  optional io.restorecommerce.status.Status status = 2;
}

message Locale {
  optional string id = 1;
  optional io.restorecommerce.meta.Meta meta = 2;
  optional string value = 3; // official symbole
  optional string description = 4;
  optional string name = 5; // display name
  optional string parent_id = 6 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.locale.Locale",
      target_service: "master_data",
      target_sub_service: "locale",
      target_method: "Read",
      field_name: "parent",
    }
  ]; // parent_id for allowed fallback e.g.: 'en-de' may allow fallback to 'en' 
}
