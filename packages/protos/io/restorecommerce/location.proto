syntax = "proto3";

package io.restorecommerce.location;

import "io/restorecommerce/resource_base.proto";
import "google/protobuf/any.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";

// Used by resolvers
import "io/restorecommerce/organization.proto";
import "io/restorecommerce/address.proto";

/*
* Microservice definition.
*/
service LocationService {
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (LocationListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (LocationList) returns (LocationListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc Update (LocationList) returns (LocationListResponse);
  rpc Upsert (LocationList) returns (LocationListResponse);
}

message Deleted {
  string id = 1;
}

message LocationList {
  repeated Location items = 1;
  optional uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message LocationListResponse {
  repeated LocationResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message LocationResponse {
  Location payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message Location {
  optional string id = 1; // Location ID, unique, key
  optional io.restorecommerce.meta.Meta meta = 2;
  optional string name = 3; // Location name
  optional string description = 4;
  optional string organization_id = 5 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.organization.Organization",
      target_service: "master_data",
      target_sub_service: "organization",
      target_method: "Read",
      field_name: "organization",
    }
  ]; // Organization to which this location is linked
  optional string parent_id = 6 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.location.Location",
      target_service: "master_data",
      target_sub_service: "location",
      target_method: "Read",
      field_name: "parent",
    }
  ];  //  Location which may contain this location; may be null
  optional string address_id = 8 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.address.Address",
      target_service: "master_data",
      target_sub_service: "address",
      target_method: "Read",
      field_name: "address",
    }
  ];
  optional google.protobuf.Any data = 9; /// additional data
  optional string type = 10; // location type
}
