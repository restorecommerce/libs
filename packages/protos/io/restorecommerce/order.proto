syntax = "proto3";

package io.restorecommerce.order;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";
import "io/restorecommerce/address.proto";
import "io/restorecommerce/fulfillment.proto";


service Service {
  option (io.restorecommerce.options.service_name) = "order";

  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (OrderListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (OrderList) returns (OrderListResponse);
  rpc Update (OrderList) returns (OrderListResponse);
  rpc Upsert (OrderList) returns (OrderListResponse);
  rpc Submit (OrderList) returns (OrderListResponse);
  rpc Cancel (CancelRequestList) returns (OrderListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc TriggerFulfillment (TriggerFulfillmentRequestList) returns (io.restorecommerce.status.Status);
}

enum State {
  Undefined = 0;
  Invalid = 1;
  Failed = 2;
  Cancelled = 3;
  Created = 4;
  Submitted = 5;
  Shipping = 6;
  Done = 7;
}

message Item {
  // below identifier is id of product, variant or bundle
  string product_variant_bundle_id = 1;
  string product_name = 2;
  string product_description = 3;
  string manufacturer_name = 4;
  string manufacturer_description = 5;
  string prototype_name = 6;
  string prototype_description = 7;
  int32 quantity = 8;
  int32 vat = 9;
  double price = 10;
  double quantity_price = 11;
  string item_type = 12;
  double taric_code = 13;
  string stock_keeping_unit = 14;
  double weight_in_kg = 15;
  int32 length_in_cm = 16;
  int32 width_in_cm = 17;
  int32 height_in_cm = 18;
}

/**
  Database Entity
*/
message Order {
  option (restorecommerce.options.kafka_subscriber) = {
    plural: "orders"
    topic: "io.restorecommerce.orders.resource"
    created: "orderCreated"
    updated: "orderUpdated"
    deleted: "orderDeleted"
  };

  string id = 1;
  io.restorecommerce.meta.Meta meta = 2;
  string name = 3;
  string description = 4;
  State state = 5;
  string customer_reference = 6;
  repeated Item items = 7;
  double total_price = 8;
  io.restorecommerce.address.Address shipping_address = 11;
  io.restorecommerce.address.Address billing_address = 13;
  string billing_email = 14;
  io.restorecommerce.address.ContactPerson contact_person = 15;
  string notification_email = 16;
  repeated string fulfillment_ids = 17;
}

message ShippingDetails {
  string export_type = 1;
  string export_description = 2;
  string invoice_number = 3;
  io.restorecommerce.address.Address sender_address = 5;
  io.restorecommerce.address.ContactPerson contact_person = 15;
}

message TriggerFulfillmentRequest {
  Order order = 1;
  ShippingDetails shipping_details = 2;
  repeated io.restorecommerce.fulfillment.Parcel parcels = 3;
}

message TriggerFulfillmentRequestList {
  repeated TriggerFulfillmentRequest items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message OrderList {
  repeated Order items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message OrderListResponse {
  repeated OrderResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message OrderResponse {
  Order payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message CancelRequestList {
  repeated string ids = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message Deleted {
  string id = 1;
}