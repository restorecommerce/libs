syntax = "proto3";

package io.restorecommerce.order;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";
import "io/restorecommerce/address.proto";
import "io/restorecommerce/tax.proto";
import "io/restorecommerce/country.proto";
import "io/restorecommerce/fulfillment.proto";
import "io/restorecommerce/fulfillment_product.proto";


service OrderService {
  option (io.restorecommerce.options.service_name) = "order";

  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (OrderListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (OrderList) returns (OrderListResponse);
  rpc Update (OrderList) returns (OrderListResponse);
  rpc Upsert (OrderList) returns (OrderListResponse);
  rpc Evaluate (OrderList) returns (OrderListResponse);
  rpc Submit (OrderList) returns (OrderListResponse);
  rpc Withdraw (OrderIdList) returns (OrderListResponse);
  rpc Cancel (OrderIdList) returns (OrderListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  
  // Requires Fulfillment Service
  rpc QueryPackingSolution (FulfillmentRequestList) returns (io.restorecommerce.fulfillment_product.PackingSolutionListResponse);
  // Requires Fulfillment Service
  rpc CreateFulfillment (FulfillmentRequestList) returns (io.restorecommerce.fulfillment.FulfillmentListResponse);
  // Requires Fulfillment Service
  rpc TriggerFulfillment (FulfillmentRequestList) returns (io.restorecommerce.status.StatusListResponse);
}

enum OrderState {
  Created = 0;
  Submitted = 1;
  Confirmed = 2;
  Invalid = 3;
  Shipping = 4;
  Failed = 5;
  Done = 6;
  Withdrawn = 7;
  Cancelled = 8;
}

message OrderItem {
  string product_id = 1;
  string variant_id = 2;
  int32 quantity = 3;
  double unit_price = 4; //Set by service
  double price = 5; //Set by service
  repeated io.restorecommerce.tax.VAT vats = 6; //Set by service
}

/**
  Database Entity
*/
message Order {
  option (restorecommerce.options.kafka_subscriber) = {
    plural: "orders"
    topic: "io.restorecommerce.orders.resource"
    created: "orderCreated"
    updated: "orderUpdated"
    deleted: "orderDeleted"
  };

  string id = 1;
  io.restorecommerce.meta.Meta meta = 2;
  OrderState state = 3;
  string customer_reference = 4;
  repeated OrderItem items = 5;
  double total_price = 6; //Set by service
  double total_vat = 7; //Set by service
  io.restorecommerce.address.ShippingAddress shipping_address = 8;
  io.restorecommerce.address.ShippingAddress billing_address = 9;
  string billing_email = 10;
  string notification_email = 11;
  io.restorecommerce.fulfillment_product.Preferences packing_preferences = 12;
}

message OrderIdList {
  repeated string ids = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message OrderList {
  repeated Order items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message OrderListResponse {
  repeated OrderResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message OrderResponse {
  Order payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message Deleted {
  string id = 1;
}

message ShippingDetails {
  string export_type = 1;
  string export_description = 2;
  string invoice_number = 3;
  io.restorecommerce.address.ShippingAddress sender_address = 4;
}

message FulfillmentRequest {
  string reference_id = 1;
  ShippingDetails shipping_details = 2;
}

message FulfillmentRequestList {
  repeated FulfillmentRequest items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}