syntax = "proto3";

package io.restorecommerce.policy_set;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/policy.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/rule.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";

message PolicySet {
  optional string id = 1;
  optional io.restorecommerce.meta.Meta meta = 2;
  optional string name = 3;
  optional string description = 4;
  optional io.restorecommerce.rule.Target target = 5;
  optional string combining_algorithm = 6;
  repeated string policies = 7; // policy IDs
}

message PolicySetList {
  repeated PolicySet items = 1;
  optional uint32 total_count = 2;
  optional io.restorecommerce.auth.Subject subject = 3;
}

message PolicySetListResponse {
  repeated PolicySetResponse items = 1;
  optional uint32 total_count = 2;
  optional io.restorecommerce.status.OperationStatus operation_status = 3;
}

message PolicySetResponse {
  optional PolicySet payload = 1;
  optional io.restorecommerce.status.Status status = 2;
}

message PolicySetRQ {
  optional string id = 1;
  optional io.restorecommerce.rule.Target target = 2;
  optional string combining_algorithm = 3;
  repeated io.restorecommerce.policy.PolicyRQ policies = 4;
  optional io.restorecommerce.rule.Effect effect = 5;
}

service PolicySetService {
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (PolicySetListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (PolicySetList) returns (PolicySetListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc Update (PolicySetList) returns (PolicySetListResponse);
  rpc Upsert (PolicySetList) returns (PolicySetListResponse);
}
