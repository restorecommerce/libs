syntax = "proto3";

package io.restorecommerce.product;

import "google/protobuf/any.proto";

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/image.proto";
import "io/restorecommerce/file.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/attribute.proto";
import "io/restorecommerce/geometry.proto";
import "io/restorecommerce/options.proto";

// Used by resolvers
import "io/restorecommerce/manufacturer.proto";

service ProductService {
  option (io.restorecommerce.options.service_name) = "product";

  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (ProductListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (ProductList) returns (ProductListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc Update (ProductList) returns (ProductListResponse);
  rpc Upsert (ProductList) returns (ProductListResponse);
}

enum AssociationType {
  Miscellaneous = 0;
  Accesory = 1;
  Recommendation = 2;
}

message Association {
  optional string product_id = 1 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.product.Product",
      target_service: "catalog",
      target_sub_service: "product",
      target_method: "Read",
      field_name: "product",
    }
  ];
  AssociationType type = 2;
  repeated string tags = 3;
  google.protobuf.any.Any data = 4;
}

message Appendix {
  optional int64 index = 1;
  optional string name = 2;
  optional string description = 3;
  repeated string tags = 4;
  optional string url = 5;
  optional string content_type = 6;
  optional io.restorecommerce.image.Image thumbnail = 7;
}

// Product resource entity
message Product {
  option (restorecommerce.options.kafka_subscriber) = {
    plural: "products"
    topic: "io.restorecommerce.product.resource"
    created: "productCreated"
    updated: "productUpdated"
    deleted: "productDeleted"
  };

  optional string id = 1;
  io.restorecommerce.meta.Meta meta = 2;
  oneof product_type {
    IndividualProduct product = 3;
    Bundle bundle = 4;
  }
  optional bool active = 5;
  repeated string tags = 6;
  repeated Association associations = 7;
  google.protobuf.any.Any data = 8;
}

message IndividualProduct {
  optional string name = 1;
  optional string description = 2;
  optional string manufacturer_id = 3 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.manufacturer.Manufacturer",
      target_service: "catalog",
      target_sub_service: "manufacturer",
      target_method: "Read",
      field_name: "manufacturer",
    }
  ];
  optional string taric_code = 4;
  oneof classification {
    string prototype_id = 5 [
      (io.restorecommerce.options.resolver) = {
        target_type: ".io.restorecommerce.product_prototype.ProductPrototype",
        target_service: "catalog",
        target_sub_service: "product_prototype",
        target_method: "Read",
        field_name: "prototype",
      }
    ];
    string category_id = 6 [
      (io.restorecommerce.options.resolver) = {
        target_type: ".io.restorecommerce.product_category.ProductCategory",
        target_service: "catalog",
        target_sub_service: "product_category",
        target_method: "Read",
        field_name: "category",
      }
    ];
  }
  repeated string tax_ids = 7;
  optional string gtin = 8;
  oneof nature {
    PhysicalProduct physical = 9;
    VirtualProduct virtual = 10;
  };
}

message PhysicalProduct {
  repeated PhysicalVariant variants = 1;
}

message VirtualProduct {
  repeated VirtualVariant variants = 1;
}

message ProductList {
  repeated Product items = 1;
  optional uint32 total_count = 2;
  optional io.restorecommerce.auth.Subject subject = 3;
}

message ProductListResponse {
  repeated ProductResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message ProductResponse {
  Product payload = 1;
  io.restorecommerce.status.Status status = 3;
}

message Package {
  optional io.restorecommerce.geometry.BoundingBox3D size_in_cm = 1;
  optional double weight_in_kg = 2;
  optional bool rotatable = 3;
}

message PhysicalVariant {
  optional string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional int32 stock_level = 4;
  optional double price = 5;
  optional bool sale = 6;
  optional double sale_price = 7;
  repeated io.restorecommerce.image.Image images = 8;
  repeated io.restorecommerce.file.File files = 9;
  optional string stock_keeping_unit = 10;
  optional string template_variant = 11;
  optional Package packaged = 12;
  repeated io.restorecommerce.attribute.Attribute attributes = 13;
}

message VirtualVariant {
  optional string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional int32 stock_level = 4;
  optional double price = 5;
  optional bool sale = 6;
  optional double sale_price = 7;
  repeated io.restorecommerce.image.Image images = 8;
  repeated io.restorecommerce.file.File files = 9;
  optional string stock_keeping_unit = 10;
  optional string template_variant = 11;
  repeated io.restorecommerce.attribute.Attribute attributes = 12;
}

message Bundle {
  optional string name = 1;
  optional string description = 2;
  repeated io.restorecommerce.image.Image image = 3;
  repeated BundleProduct products = 4;
  optional double price = 5;
  optional Package pre_packaged = 6;
}

message BundleProduct {
  optional string product_id = 1 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.product.Product",
      target_service: "catalog",
      target_sub_service: "product",
      target_method: "Read",
      field_name: "product",
    }
  ];
  optional string variant_id = 2;
  optional uint32 quantity = 3;
  optional double tax_ratio = 4; //Discount in relation to the bundle price
}

message Deleted {
  optional string id = 1;
}
