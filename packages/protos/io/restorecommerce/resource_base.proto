syntax = "proto3";
package io.restorecommerce.resourcebase;

import "google/protobuf/any.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/filter.proto";

// Service provides the CRUD operations
service Service {
  rpc Read (ReadRequest) returns (ResourceListResponse);
  rpc Create (ResourceList) returns (ResourceListResponse);
  rpc Delete (DeleteRequest) returns (DeleteResponse);
  rpc Update (ResourceList) returns (ResourceListResponse);
  rpc Upsert (ResourceList) returns (ResourceListResponse);
}

message FieldFilter {
  string name = 1;
  bool include = 2;
}

message Sort {
  enum SortOrder {
    UNSORTED = 0;
    ASCENDING = 1;
    DESCENDING = 2;
  }
  string field = 1;
  SortOrder order = 2;
}

message Filter {
  string field = 1;
  enum Operation {
    eq = 0;
    lt = 1;
    lte = 2;
    gt = 3;
    gte = 4;
    isEmpty = 5;
    iLike = 6;
    in = 7;
    neq = 8;
  }
  Operation operation = 2;
  string value = 3;
  enum ValueType {
    STRING = 0; // default value type if not specified
    NUMBER = 1;
    BOOLEAN = 2;
    DATE = 3;
    ARRAY = 4;
  }
  ValueType type = 4;
  repeated io.restorecommerce.filter.FilterOp filters = 5; // for nested filtering and to make optional its in separate filter.proto file
}

message FilterOp {
  repeated Filter filter = 1;
  enum Operator {
    and = 0;
    or = 1;
  }
  Operator operator = 2;
}

message Search {
  string search = 1; // search string
  repeated string fields = 2; // list of fields to be searched on entity (if not specified all indexed fields will be searched)
  bool case_sensitive = 3; // default search is case insensitive
}

message ReadRequest {
  uint32 offset = 1;
  uint32 limit = 2;
  repeated Sort sort = 3;

  /// Filter based on fieldName|operation, value|list
  repeated FilterOp filters = 4; // repeated filters

  /// Fields selector
  repeated FieldFilter field = 5;

  /** Check the query parameters of HTTP request.
    * If query parameter `locales` is given,
    * return all corresponding localized values.
    * Otherwise, return always the localized value
    * with highest priority.
    * Can be empty, single locale or multiple locales.
    */
  repeated string locales_limiter = 7;

  repeated string custom_queries = 8;
  google.protobuf.Any custom_arguments = 9;
  io.restorecommerce.auth.Subject subject = 10;
  Search search = 11;
}

message DeleteRequest {
  /// Request to purge the whole collection
  bool collection = 1;
  /// Delete specified documents
  repeated string ids = 2;
  io.restorecommerce.auth.Subject subject = 3;
  repeated string view = 4; // list of views to be dropped
  repeated string analyzer = 5; // list of analyzers to be deleted
}

message DeleteResponse {
  repeated io.restorecommerce.status.Status status = 1;
  io.restorecommerce.status.OperationStatus operation_status = 2;
}

/// List of resources
message ResourceList {
  repeated Resource items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

// ResourceList response
message ResourceListResponse {
  repeated ResourceResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

// resource read response
message ResourceResponse {
  Resource payload = 1;
  io.restorecommerce.status.Status status = 2;
}

/// Example resource
message Resource {
  string id = 1;
  io.restorecommerce.meta.Meta meta = 2;
}
