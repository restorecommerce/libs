syntax = "proto3";

package io.restorecommerce.unit;

import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/meta.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/options.proto";

/*
* Microservice definition.
*/
service Service {
  option (io.restorecommerce.options.service_name) = "unit";

  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (UnitListResponse) {
    option (io.restorecommerce.options.is_query) = true;
  };
  rpc Create (UnitList) returns (UnitListResponse);
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
  rpc Update (UnitList) returns (UnitListResponse);
  rpc Upsert (UnitList) returns (UnitListResponse);
}

enum UnitType {
  UnitTypeUndefined = 0;
  Length = 1;
  Weight = 2;
  Speed = 3;
  Force = 4;
  //...
}

enum UnitSystem {
  UnitSystemUndefined = 0;
  Metric = 1;
  Imperial = 2;
}

message Unit {
  string id = 1;
  io.restorecommerce.meta.Meta meta = 2;
  string parent_id = 3 [
    (io.restorecommerce.options.resolver) = {
      target_type: ".io.restorecommerce.unit.Unit",
      target_service: "resource",
      target_sub_service: "unit",
      target_method: "Read",
      field_name: "parent",
    }
  ];
  string name = 4;
  string symbol = 5;
  oneof type {
    UnitType standard_type = 6;
    string custom_type = 7;
  }
  oneof system {
    UnitSystem standard_system = 8;
    string custom_system = 9;
  }
  double factor = 10; //convert factor to standard unit
}

message UnitList {
  repeated Unit items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

message UnitListResponse {
  repeated UnitResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message UnitResponse {
  Unit payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message Deleted {
  string id = 1;
}