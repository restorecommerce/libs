/* eslint-disable */
import type { CallContext, CallOptions } from "nice-grpc-common";
import * as _m0 from "protobufjs/minimal";
import { FileDescriptorProto as FileDescriptorProto1 } from "ts-proto-descriptors";
import { Any, protoMetadata as protoMetadata5 } from "../../google/protobuf/any";
import { protoMetadata as protoMetadata4, Subject } from "./auth";
import { protoMetadata as protoMetadata8 } from "./customer";
import { Meta, protoMetadata as protoMetadata2 } from "./meta";
import { protoMetadata as protoMetadata7, Resolver } from "./options";
import { Organization, protoMetadata as protoMetadata3 } from "./organization";
import { DeleteRequest, DeleteResponse, protoMetadata as protoMetadata1, ReadRequest } from "./resource_base";
import { OperationStatus, protoMetadata as protoMetadata6, Status } from "./status";

export const protobufPackage = "io.restorecommerce.invoice";

export interface RequestInvoiceNumber {
  context?: Any;
  subject?: Subject;
}

export interface InvoiceNumberResponse {
  invoiceNo: string;
}

export interface Deleted {
  id: string;
}

/** For multiple invoices */
export interface InvoiceList {
  items: Invoice[];
  totalCount: number;
  subject?: Subject;
}

export interface InvoiceListResponse {
  items: InvoiceResponse[];
  totalCount: number;
  operationStatus?: OperationStatus;
}

export interface InvoiceResponse {
  payload?: Invoice;
  status?: Status;
}

/** A simple invoice. */
export interface Invoice {
  id: string;
  meta?: Meta;
  timestamp: string;
  customerId: string;
  paymentStatus: string;
  totalAmount: number;
  netAmount: number;
  /** difference between net and total */
  vatAmount: number;
  document: string;
  invoiceNumber: string;
  customerRemark: string;
}

/** List of Invoice Positions data */
export interface InvoicesPositionsData {
  invoicesPositionsData: InvoicePositions[];
}

export interface InvoicePositions {
  /** contract or customer identifier */
  id: string;
  invoicePositions: InvoicePosition[];
  recipientCustomer?: RecipientCustomer;
  recipientBillingAddress?: BillingAddress;
  senderBillingAddress?: BillingAddress;
  recipientOrganization?: Organization;
  senderOrganization?: Organization;
  paymentMethodDetails?: Any;
  /** optional invoice number if not it will be generated by service */
  invoiceNo: string;
  /** value performance from date */
  fromDate: number;
  /** value performance to date */
  toDate: number;
}

export interface RecipientCustomer {
  /** customer id - used to store the resource in DB */
  id: string;
  /** displayed in invoice */
  customerNumber: string;
}

export interface BillingAddress {
  email: string;
  website: string;
  street: string;
  buildingNumber: string;
  postcode: string;
  region: string;
  countryName: string;
  telephone: string;
  timezone: string;
  economicArea: string;
  locality: string;
  organizationName: string;
}

export interface InvoicePosition {
  currency: string;
  tableList: InvoiceRow[];
  totalPrice?: InvoicePrice;
}

export interface InvoiceRow {
  product: string;
  pricePerUnit: number;
  quantity: number;
  vat: string;
  amount: number;
  /** if there is any contract associated with product */
  contractStartDate: number;
}

export interface InvoicePrice {
  gross: number;
  net: number;
}

export interface TriggerInvoices {
  /** list of id referring to contract_ids or customer_ids */
  ids: string[];
}

function createBaseRequestInvoiceNumber(): RequestInvoiceNumber {
  return { context: undefined, subject: undefined };
}

export const RequestInvoiceNumber = {
  encode(message: RequestInvoiceNumber, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.context !== undefined) {
      Any.encode(message.context, writer.uint32(10).fork()).ldelim();
    }
    if (message.subject !== undefined) {
      Subject.encode(message.subject, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): RequestInvoiceNumber {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRequestInvoiceNumber();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.context = Any.decode(reader, reader.uint32());
          break;
        case 3:
          message.subject = Subject.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): RequestInvoiceNumber {
    return {
      context: isSet(object.context) ? Any.fromJSON(object.context) : undefined,
      subject: isSet(object.subject) ? Subject.fromJSON(object.subject) : undefined,
    };
  },

  toJSON(message: RequestInvoiceNumber): unknown {
    const obj: any = {};
    message.context !== undefined && (obj.context = message.context ? Any.toJSON(message.context) : undefined);
    message.subject !== undefined && (obj.subject = message.subject ? Subject.toJSON(message.subject) : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<RequestInvoiceNumber>): RequestInvoiceNumber {
    const message = createBaseRequestInvoiceNumber();
    message.context = (object.context !== undefined && object.context !== null)
      ? Any.fromPartial(object.context)
      : undefined;
    message.subject = (object.subject !== undefined && object.subject !== null)
      ? Subject.fromPartial(object.subject)
      : undefined;
    return message;
  },
};

function createBaseInvoiceNumberResponse(): InvoiceNumberResponse {
  return { invoiceNo: "" };
}

export const InvoiceNumberResponse = {
  encode(message: InvoiceNumberResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.invoiceNo !== "") {
      writer.uint32(10).string(message.invoiceNo);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceNumberResponse {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceNumberResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.invoiceNo = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceNumberResponse {
    return { invoiceNo: isSet(object.invoiceNo) ? String(object.invoiceNo) : "" };
  },

  toJSON(message: InvoiceNumberResponse): unknown {
    const obj: any = {};
    message.invoiceNo !== undefined && (obj.invoiceNo = message.invoiceNo);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoiceNumberResponse>): InvoiceNumberResponse {
    const message = createBaseInvoiceNumberResponse();
    message.invoiceNo = object.invoiceNo ?? "";
    return message;
  },
};

function createBaseDeleted(): Deleted {
  return { id: "" };
}

export const Deleted = {
  encode(message: Deleted, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Deleted {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleted();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): Deleted {
    return { id: isSet(object.id) ? String(object.id) : "" };
  },

  toJSON(message: Deleted): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    return obj;
  },

  fromPartial(object: DeepPartial<Deleted>): Deleted {
    const message = createBaseDeleted();
    message.id = object.id ?? "";
    return message;
  },
};

function createBaseInvoiceList(): InvoiceList {
  return { items: [], totalCount: 0, subject: undefined };
}

export const InvoiceList = {
  encode(message: InvoiceList, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.items) {
      Invoice.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    if (message.totalCount !== 0) {
      writer.uint32(16).uint32(message.totalCount);
    }
    if (message.subject !== undefined) {
      Subject.encode(message.subject, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceList {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceList();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.items.push(Invoice.decode(reader, reader.uint32()));
          break;
        case 2:
          message.totalCount = reader.uint32();
          break;
        case 3:
          message.subject = Subject.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceList {
    return {
      items: Array.isArray(object?.items) ? object.items.map((e: any) => Invoice.fromJSON(e)) : [],
      totalCount: isSet(object.totalCount) ? Number(object.totalCount) : 0,
      subject: isSet(object.subject) ? Subject.fromJSON(object.subject) : undefined,
    };
  },

  toJSON(message: InvoiceList): unknown {
    const obj: any = {};
    if (message.items) {
      obj.items = message.items.map((e) => e ? Invoice.toJSON(e) : undefined);
    } else {
      obj.items = [];
    }
    message.totalCount !== undefined && (obj.totalCount = Math.round(message.totalCount));
    message.subject !== undefined && (obj.subject = message.subject ? Subject.toJSON(message.subject) : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoiceList>): InvoiceList {
    const message = createBaseInvoiceList();
    message.items = object.items?.map((e) => Invoice.fromPartial(e)) || [];
    message.totalCount = object.totalCount ?? 0;
    message.subject = (object.subject !== undefined && object.subject !== null)
      ? Subject.fromPartial(object.subject)
      : undefined;
    return message;
  },
};

function createBaseInvoiceListResponse(): InvoiceListResponse {
  return { items: [], totalCount: 0, operationStatus: undefined };
}

export const InvoiceListResponse = {
  encode(message: InvoiceListResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.items) {
      InvoiceResponse.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    if (message.totalCount !== 0) {
      writer.uint32(16).uint32(message.totalCount);
    }
    if (message.operationStatus !== undefined) {
      OperationStatus.encode(message.operationStatus, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceListResponse {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceListResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.items.push(InvoiceResponse.decode(reader, reader.uint32()));
          break;
        case 2:
          message.totalCount = reader.uint32();
          break;
        case 3:
          message.operationStatus = OperationStatus.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceListResponse {
    return {
      items: Array.isArray(object?.items) ? object.items.map((e: any) => InvoiceResponse.fromJSON(e)) : [],
      totalCount: isSet(object.totalCount) ? Number(object.totalCount) : 0,
      operationStatus: isSet(object.operationStatus) ? OperationStatus.fromJSON(object.operationStatus) : undefined,
    };
  },

  toJSON(message: InvoiceListResponse): unknown {
    const obj: any = {};
    if (message.items) {
      obj.items = message.items.map((e) => e ? InvoiceResponse.toJSON(e) : undefined);
    } else {
      obj.items = [];
    }
    message.totalCount !== undefined && (obj.totalCount = Math.round(message.totalCount));
    message.operationStatus !== undefined &&
      (obj.operationStatus = message.operationStatus ? OperationStatus.toJSON(message.operationStatus) : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoiceListResponse>): InvoiceListResponse {
    const message = createBaseInvoiceListResponse();
    message.items = object.items?.map((e) => InvoiceResponse.fromPartial(e)) || [];
    message.totalCount = object.totalCount ?? 0;
    message.operationStatus = (object.operationStatus !== undefined && object.operationStatus !== null)
      ? OperationStatus.fromPartial(object.operationStatus)
      : undefined;
    return message;
  },
};

function createBaseInvoiceResponse(): InvoiceResponse {
  return { payload: undefined, status: undefined };
}

export const InvoiceResponse = {
  encode(message: InvoiceResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.payload !== undefined) {
      Invoice.encode(message.payload, writer.uint32(10).fork()).ldelim();
    }
    if (message.status !== undefined) {
      Status.encode(message.status, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceResponse {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payload = Invoice.decode(reader, reader.uint32());
          break;
        case 2:
          message.status = Status.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceResponse {
    return {
      payload: isSet(object.payload) ? Invoice.fromJSON(object.payload) : undefined,
      status: isSet(object.status) ? Status.fromJSON(object.status) : undefined,
    };
  },

  toJSON(message: InvoiceResponse): unknown {
    const obj: any = {};
    message.payload !== undefined && (obj.payload = message.payload ? Invoice.toJSON(message.payload) : undefined);
    message.status !== undefined && (obj.status = message.status ? Status.toJSON(message.status) : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoiceResponse>): InvoiceResponse {
    const message = createBaseInvoiceResponse();
    message.payload = (object.payload !== undefined && object.payload !== null)
      ? Invoice.fromPartial(object.payload)
      : undefined;
    message.status = (object.status !== undefined && object.status !== null)
      ? Status.fromPartial(object.status)
      : undefined;
    return message;
  },
};

function createBaseInvoice(): Invoice {
  return {
    id: "",
    meta: undefined,
    timestamp: "",
    customerId: "",
    paymentStatus: "",
    totalAmount: 0,
    netAmount: 0,
    vatAmount: 0,
    document: "",
    invoiceNumber: "",
    customerRemark: "",
  };
}

export const Invoice = {
  encode(message: Invoice, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.meta !== undefined) {
      Meta.encode(message.meta, writer.uint32(18).fork()).ldelim();
    }
    if (message.timestamp !== "") {
      writer.uint32(34).string(message.timestamp);
    }
    if (message.customerId !== "") {
      writer.uint32(42).string(message.customerId);
    }
    if (message.paymentStatus !== "") {
      writer.uint32(50).string(message.paymentStatus);
    }
    if (message.totalAmount !== 0) {
      writer.uint32(57).double(message.totalAmount);
    }
    if (message.netAmount !== 0) {
      writer.uint32(65).double(message.netAmount);
    }
    if (message.vatAmount !== 0) {
      writer.uint32(73).double(message.vatAmount);
    }
    if (message.document !== "") {
      writer.uint32(82).string(message.document);
    }
    if (message.invoiceNumber !== "") {
      writer.uint32(90).string(message.invoiceNumber);
    }
    if (message.customerRemark !== "") {
      writer.uint32(98).string(message.customerRemark);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Invoice {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoice();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        case 2:
          message.meta = Meta.decode(reader, reader.uint32());
          break;
        case 4:
          message.timestamp = reader.string();
          break;
        case 5:
          message.customerId = reader.string();
          break;
        case 6:
          message.paymentStatus = reader.string();
          break;
        case 7:
          message.totalAmount = reader.double();
          break;
        case 8:
          message.netAmount = reader.double();
          break;
        case 9:
          message.vatAmount = reader.double();
          break;
        case 10:
          message.document = reader.string();
          break;
        case 11:
          message.invoiceNumber = reader.string();
          break;
        case 12:
          message.customerRemark = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): Invoice {
    return {
      id: isSet(object.id) ? String(object.id) : "",
      meta: isSet(object.meta) ? Meta.fromJSON(object.meta) : undefined,
      timestamp: isSet(object.timestamp) ? String(object.timestamp) : "",
      customerId: isSet(object.customerId) ? String(object.customerId) : "",
      paymentStatus: isSet(object.paymentStatus) ? String(object.paymentStatus) : "",
      totalAmount: isSet(object.totalAmount) ? Number(object.totalAmount) : 0,
      netAmount: isSet(object.netAmount) ? Number(object.netAmount) : 0,
      vatAmount: isSet(object.vatAmount) ? Number(object.vatAmount) : 0,
      document: isSet(object.document) ? String(object.document) : "",
      invoiceNumber: isSet(object.invoiceNumber) ? String(object.invoiceNumber) : "",
      customerRemark: isSet(object.customerRemark) ? String(object.customerRemark) : "",
    };
  },

  toJSON(message: Invoice): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    message.meta !== undefined && (obj.meta = message.meta ? Meta.toJSON(message.meta) : undefined);
    message.timestamp !== undefined && (obj.timestamp = message.timestamp);
    message.customerId !== undefined && (obj.customerId = message.customerId);
    message.paymentStatus !== undefined && (obj.paymentStatus = message.paymentStatus);
    message.totalAmount !== undefined && (obj.totalAmount = message.totalAmount);
    message.netAmount !== undefined && (obj.netAmount = message.netAmount);
    message.vatAmount !== undefined && (obj.vatAmount = message.vatAmount);
    message.document !== undefined && (obj.document = message.document);
    message.invoiceNumber !== undefined && (obj.invoiceNumber = message.invoiceNumber);
    message.customerRemark !== undefined && (obj.customerRemark = message.customerRemark);
    return obj;
  },

  fromPartial(object: DeepPartial<Invoice>): Invoice {
    const message = createBaseInvoice();
    message.id = object.id ?? "";
    message.meta = (object.meta !== undefined && object.meta !== null) ? Meta.fromPartial(object.meta) : undefined;
    message.timestamp = object.timestamp ?? "";
    message.customerId = object.customerId ?? "";
    message.paymentStatus = object.paymentStatus ?? "";
    message.totalAmount = object.totalAmount ?? 0;
    message.netAmount = object.netAmount ?? 0;
    message.vatAmount = object.vatAmount ?? 0;
    message.document = object.document ?? "";
    message.invoiceNumber = object.invoiceNumber ?? "";
    message.customerRemark = object.customerRemark ?? "";
    return message;
  },
};

function createBaseInvoicesPositionsData(): InvoicesPositionsData {
  return { invoicesPositionsData: [] };
}

export const InvoicesPositionsData = {
  encode(message: InvoicesPositionsData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.invoicesPositionsData) {
      InvoicePositions.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicesPositionsData {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicesPositionsData();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.invoicesPositionsData.push(InvoicePositions.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicesPositionsData {
    return {
      invoicesPositionsData: Array.isArray(object?.invoicesPositionsData)
        ? object.invoicesPositionsData.map((e: any) => InvoicePositions.fromJSON(e))
        : [],
    };
  },

  toJSON(message: InvoicesPositionsData): unknown {
    const obj: any = {};
    if (message.invoicesPositionsData) {
      obj.invoicesPositionsData = message.invoicesPositionsData.map((e) => e ? InvoicePositions.toJSON(e) : undefined);
    } else {
      obj.invoicesPositionsData = [];
    }
    return obj;
  },

  fromPartial(object: DeepPartial<InvoicesPositionsData>): InvoicesPositionsData {
    const message = createBaseInvoicesPositionsData();
    message.invoicesPositionsData = object.invoicesPositionsData?.map((e) => InvoicePositions.fromPartial(e)) || [];
    return message;
  },
};

function createBaseInvoicePositions(): InvoicePositions {
  return {
    id: "",
    invoicePositions: [],
    recipientCustomer: undefined,
    recipientBillingAddress: undefined,
    senderBillingAddress: undefined,
    recipientOrganization: undefined,
    senderOrganization: undefined,
    paymentMethodDetails: undefined,
    invoiceNo: "",
    fromDate: 0,
    toDate: 0,
  };
}

export const InvoicePositions = {
  encode(message: InvoicePositions, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    for (const v of message.invoicePositions) {
      InvoicePosition.encode(v!, writer.uint32(18).fork()).ldelim();
    }
    if (message.recipientCustomer !== undefined) {
      RecipientCustomer.encode(message.recipientCustomer, writer.uint32(26).fork()).ldelim();
    }
    if (message.recipientBillingAddress !== undefined) {
      BillingAddress.encode(message.recipientBillingAddress, writer.uint32(34).fork()).ldelim();
    }
    if (message.senderBillingAddress !== undefined) {
      BillingAddress.encode(message.senderBillingAddress, writer.uint32(42).fork()).ldelim();
    }
    if (message.recipientOrganization !== undefined) {
      Organization.encode(message.recipientOrganization, writer.uint32(50).fork()).ldelim();
    }
    if (message.senderOrganization !== undefined) {
      Organization.encode(message.senderOrganization, writer.uint32(58).fork()).ldelim();
    }
    if (message.paymentMethodDetails !== undefined) {
      Any.encode(message.paymentMethodDetails, writer.uint32(66).fork()).ldelim();
    }
    if (message.invoiceNo !== "") {
      writer.uint32(74).string(message.invoiceNo);
    }
    if (message.fromDate !== 0) {
      writer.uint32(81).double(message.fromDate);
    }
    if (message.toDate !== 0) {
      writer.uint32(89).double(message.toDate);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicePositions {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicePositions();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        case 2:
          message.invoicePositions.push(InvoicePosition.decode(reader, reader.uint32()));
          break;
        case 3:
          message.recipientCustomer = RecipientCustomer.decode(reader, reader.uint32());
          break;
        case 4:
          message.recipientBillingAddress = BillingAddress.decode(reader, reader.uint32());
          break;
        case 5:
          message.senderBillingAddress = BillingAddress.decode(reader, reader.uint32());
          break;
        case 6:
          message.recipientOrganization = Organization.decode(reader, reader.uint32());
          break;
        case 7:
          message.senderOrganization = Organization.decode(reader, reader.uint32());
          break;
        case 8:
          message.paymentMethodDetails = Any.decode(reader, reader.uint32());
          break;
        case 9:
          message.invoiceNo = reader.string();
          break;
        case 10:
          message.fromDate = reader.double();
          break;
        case 11:
          message.toDate = reader.double();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicePositions {
    return {
      id: isSet(object.id) ? String(object.id) : "",
      invoicePositions: Array.isArray(object?.invoicePositions)
        ? object.invoicePositions.map((e: any) => InvoicePosition.fromJSON(e))
        : [],
      recipientCustomer: isSet(object.recipientCustomer)
        ? RecipientCustomer.fromJSON(object.recipientCustomer)
        : undefined,
      recipientBillingAddress: isSet(object.recipientBillingAddress)
        ? BillingAddress.fromJSON(object.recipientBillingAddress)
        : undefined,
      senderBillingAddress: isSet(object.senderBillingAddress)
        ? BillingAddress.fromJSON(object.senderBillingAddress)
        : undefined,
      recipientOrganization: isSet(object.recipientOrganization)
        ? Organization.fromJSON(object.recipientOrganization)
        : undefined,
      senderOrganization: isSet(object.senderOrganization)
        ? Organization.fromJSON(object.senderOrganization)
        : undefined,
      paymentMethodDetails: isSet(object.paymentMethodDetails) ? Any.fromJSON(object.paymentMethodDetails) : undefined,
      invoiceNo: isSet(object.invoiceNo) ? String(object.invoiceNo) : "",
      fromDate: isSet(object.fromDate) ? Number(object.fromDate) : 0,
      toDate: isSet(object.toDate) ? Number(object.toDate) : 0,
    };
  },

  toJSON(message: InvoicePositions): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    if (message.invoicePositions) {
      obj.invoicePositions = message.invoicePositions.map((e) => e ? InvoicePosition.toJSON(e) : undefined);
    } else {
      obj.invoicePositions = [];
    }
    message.recipientCustomer !== undefined && (obj.recipientCustomer = message.recipientCustomer
      ? RecipientCustomer.toJSON(message.recipientCustomer)
      : undefined);
    message.recipientBillingAddress !== undefined && (obj.recipientBillingAddress = message.recipientBillingAddress
      ? BillingAddress.toJSON(message.recipientBillingAddress)
      : undefined);
    message.senderBillingAddress !== undefined && (obj.senderBillingAddress = message.senderBillingAddress
      ? BillingAddress.toJSON(message.senderBillingAddress)
      : undefined);
    message.recipientOrganization !== undefined && (obj.recipientOrganization = message.recipientOrganization
      ? Organization.toJSON(message.recipientOrganization)
      : undefined);
    message.senderOrganization !== undefined &&
      (obj.senderOrganization = message.senderOrganization
        ? Organization.toJSON(message.senderOrganization)
        : undefined);
    message.paymentMethodDetails !== undefined &&
      (obj.paymentMethodDetails = message.paymentMethodDetails ? Any.toJSON(message.paymentMethodDetails) : undefined);
    message.invoiceNo !== undefined && (obj.invoiceNo = message.invoiceNo);
    message.fromDate !== undefined && (obj.fromDate = message.fromDate);
    message.toDate !== undefined && (obj.toDate = message.toDate);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoicePositions>): InvoicePositions {
    const message = createBaseInvoicePositions();
    message.id = object.id ?? "";
    message.invoicePositions = object.invoicePositions?.map((e) => InvoicePosition.fromPartial(e)) || [];
    message.recipientCustomer = (object.recipientCustomer !== undefined && object.recipientCustomer !== null)
      ? RecipientCustomer.fromPartial(object.recipientCustomer)
      : undefined;
    message.recipientBillingAddress =
      (object.recipientBillingAddress !== undefined && object.recipientBillingAddress !== null)
        ? BillingAddress.fromPartial(object.recipientBillingAddress)
        : undefined;
    message.senderBillingAddress = (object.senderBillingAddress !== undefined && object.senderBillingAddress !== null)
      ? BillingAddress.fromPartial(object.senderBillingAddress)
      : undefined;
    message.recipientOrganization =
      (object.recipientOrganization !== undefined && object.recipientOrganization !== null)
        ? Organization.fromPartial(object.recipientOrganization)
        : undefined;
    message.senderOrganization = (object.senderOrganization !== undefined && object.senderOrganization !== null)
      ? Organization.fromPartial(object.senderOrganization)
      : undefined;
    message.paymentMethodDetails = (object.paymentMethodDetails !== undefined && object.paymentMethodDetails !== null)
      ? Any.fromPartial(object.paymentMethodDetails)
      : undefined;
    message.invoiceNo = object.invoiceNo ?? "";
    message.fromDate = object.fromDate ?? 0;
    message.toDate = object.toDate ?? 0;
    return message;
  },
};

function createBaseRecipientCustomer(): RecipientCustomer {
  return { id: "", customerNumber: "" };
}

export const RecipientCustomer = {
  encode(message: RecipientCustomer, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.customerNumber !== "") {
      writer.uint32(18).string(message.customerNumber);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): RecipientCustomer {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRecipientCustomer();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        case 2:
          message.customerNumber = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): RecipientCustomer {
    return {
      id: isSet(object.id) ? String(object.id) : "",
      customerNumber: isSet(object.customerNumber) ? String(object.customerNumber) : "",
    };
  },

  toJSON(message: RecipientCustomer): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    message.customerNumber !== undefined && (obj.customerNumber = message.customerNumber);
    return obj;
  },

  fromPartial(object: DeepPartial<RecipientCustomer>): RecipientCustomer {
    const message = createBaseRecipientCustomer();
    message.id = object.id ?? "";
    message.customerNumber = object.customerNumber ?? "";
    return message;
  },
};

function createBaseBillingAddress(): BillingAddress {
  return {
    email: "",
    website: "",
    street: "",
    buildingNumber: "",
    postcode: "",
    region: "",
    countryName: "",
    telephone: "",
    timezone: "",
    economicArea: "",
    locality: "",
    organizationName: "",
  };
}

export const BillingAddress = {
  encode(message: BillingAddress, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.email !== "") {
      writer.uint32(10).string(message.email);
    }
    if (message.website !== "") {
      writer.uint32(18).string(message.website);
    }
    if (message.street !== "") {
      writer.uint32(26).string(message.street);
    }
    if (message.buildingNumber !== "") {
      writer.uint32(34).string(message.buildingNumber);
    }
    if (message.postcode !== "") {
      writer.uint32(42).string(message.postcode);
    }
    if (message.region !== "") {
      writer.uint32(50).string(message.region);
    }
    if (message.countryName !== "") {
      writer.uint32(58).string(message.countryName);
    }
    if (message.telephone !== "") {
      writer.uint32(74).string(message.telephone);
    }
    if (message.timezone !== "") {
      writer.uint32(82).string(message.timezone);
    }
    if (message.economicArea !== "") {
      writer.uint32(90).string(message.economicArea);
    }
    if (message.locality !== "") {
      writer.uint32(98).string(message.locality);
    }
    if (message.organizationName !== "") {
      writer.uint32(106).string(message.organizationName);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): BillingAddress {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBillingAddress();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.email = reader.string();
          break;
        case 2:
          message.website = reader.string();
          break;
        case 3:
          message.street = reader.string();
          break;
        case 4:
          message.buildingNumber = reader.string();
          break;
        case 5:
          message.postcode = reader.string();
          break;
        case 6:
          message.region = reader.string();
          break;
        case 7:
          message.countryName = reader.string();
          break;
        case 9:
          message.telephone = reader.string();
          break;
        case 10:
          message.timezone = reader.string();
          break;
        case 11:
          message.economicArea = reader.string();
          break;
        case 12:
          message.locality = reader.string();
          break;
        case 13:
          message.organizationName = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): BillingAddress {
    return {
      email: isSet(object.email) ? String(object.email) : "",
      website: isSet(object.website) ? String(object.website) : "",
      street: isSet(object.street) ? String(object.street) : "",
      buildingNumber: isSet(object.buildingNumber) ? String(object.buildingNumber) : "",
      postcode: isSet(object.postcode) ? String(object.postcode) : "",
      region: isSet(object.region) ? String(object.region) : "",
      countryName: isSet(object.countryName) ? String(object.countryName) : "",
      telephone: isSet(object.telephone) ? String(object.telephone) : "",
      timezone: isSet(object.timezone) ? String(object.timezone) : "",
      economicArea: isSet(object.economicArea) ? String(object.economicArea) : "",
      locality: isSet(object.locality) ? String(object.locality) : "",
      organizationName: isSet(object.organizationName) ? String(object.organizationName) : "",
    };
  },

  toJSON(message: BillingAddress): unknown {
    const obj: any = {};
    message.email !== undefined && (obj.email = message.email);
    message.website !== undefined && (obj.website = message.website);
    message.street !== undefined && (obj.street = message.street);
    message.buildingNumber !== undefined && (obj.buildingNumber = message.buildingNumber);
    message.postcode !== undefined && (obj.postcode = message.postcode);
    message.region !== undefined && (obj.region = message.region);
    message.countryName !== undefined && (obj.countryName = message.countryName);
    message.telephone !== undefined && (obj.telephone = message.telephone);
    message.timezone !== undefined && (obj.timezone = message.timezone);
    message.economicArea !== undefined && (obj.economicArea = message.economicArea);
    message.locality !== undefined && (obj.locality = message.locality);
    message.organizationName !== undefined && (obj.organizationName = message.organizationName);
    return obj;
  },

  fromPartial(object: DeepPartial<BillingAddress>): BillingAddress {
    const message = createBaseBillingAddress();
    message.email = object.email ?? "";
    message.website = object.website ?? "";
    message.street = object.street ?? "";
    message.buildingNumber = object.buildingNumber ?? "";
    message.postcode = object.postcode ?? "";
    message.region = object.region ?? "";
    message.countryName = object.countryName ?? "";
    message.telephone = object.telephone ?? "";
    message.timezone = object.timezone ?? "";
    message.economicArea = object.economicArea ?? "";
    message.locality = object.locality ?? "";
    message.organizationName = object.organizationName ?? "";
    return message;
  },
};

function createBaseInvoicePosition(): InvoicePosition {
  return { currency: "", tableList: [], totalPrice: undefined };
}

export const InvoicePosition = {
  encode(message: InvoicePosition, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.currency !== "") {
      writer.uint32(10).string(message.currency);
    }
    for (const v of message.tableList) {
      InvoiceRow.encode(v!, writer.uint32(18).fork()).ldelim();
    }
    if (message.totalPrice !== undefined) {
      InvoicePrice.encode(message.totalPrice, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicePosition {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicePosition();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.currency = reader.string();
          break;
        case 2:
          message.tableList.push(InvoiceRow.decode(reader, reader.uint32()));
          break;
        case 3:
          message.totalPrice = InvoicePrice.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicePosition {
    return {
      currency: isSet(object.currency) ? String(object.currency) : "",
      tableList: Array.isArray(object?.tableList) ? object.tableList.map((e: any) => InvoiceRow.fromJSON(e)) : [],
      totalPrice: isSet(object.totalPrice) ? InvoicePrice.fromJSON(object.totalPrice) : undefined,
    };
  },

  toJSON(message: InvoicePosition): unknown {
    const obj: any = {};
    message.currency !== undefined && (obj.currency = message.currency);
    if (message.tableList) {
      obj.tableList = message.tableList.map((e) => e ? InvoiceRow.toJSON(e) : undefined);
    } else {
      obj.tableList = [];
    }
    message.totalPrice !== undefined &&
      (obj.totalPrice = message.totalPrice ? InvoicePrice.toJSON(message.totalPrice) : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoicePosition>): InvoicePosition {
    const message = createBaseInvoicePosition();
    message.currency = object.currency ?? "";
    message.tableList = object.tableList?.map((e) => InvoiceRow.fromPartial(e)) || [];
    message.totalPrice = (object.totalPrice !== undefined && object.totalPrice !== null)
      ? InvoicePrice.fromPartial(object.totalPrice)
      : undefined;
    return message;
  },
};

function createBaseInvoiceRow(): InvoiceRow {
  return { product: "", pricePerUnit: 0, quantity: 0, vat: "", amount: 0, contractStartDate: 0 };
}

export const InvoiceRow = {
  encode(message: InvoiceRow, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.product !== "") {
      writer.uint32(10).string(message.product);
    }
    if (message.pricePerUnit !== 0) {
      writer.uint32(17).double(message.pricePerUnit);
    }
    if (message.quantity !== 0) {
      writer.uint32(24).uint32(message.quantity);
    }
    if (message.vat !== "") {
      writer.uint32(34).string(message.vat);
    }
    if (message.amount !== 0) {
      writer.uint32(41).double(message.amount);
    }
    if (message.contractStartDate !== 0) {
      writer.uint32(49).double(message.contractStartDate);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceRow {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceRow();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.product = reader.string();
          break;
        case 2:
          message.pricePerUnit = reader.double();
          break;
        case 3:
          message.quantity = reader.uint32();
          break;
        case 4:
          message.vat = reader.string();
          break;
        case 5:
          message.amount = reader.double();
          break;
        case 6:
          message.contractStartDate = reader.double();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceRow {
    return {
      product: isSet(object.product) ? String(object.product) : "",
      pricePerUnit: isSet(object.pricePerUnit) ? Number(object.pricePerUnit) : 0,
      quantity: isSet(object.quantity) ? Number(object.quantity) : 0,
      vat: isSet(object.vat) ? String(object.vat) : "",
      amount: isSet(object.amount) ? Number(object.amount) : 0,
      contractStartDate: isSet(object.contractStartDate) ? Number(object.contractStartDate) : 0,
    };
  },

  toJSON(message: InvoiceRow): unknown {
    const obj: any = {};
    message.product !== undefined && (obj.product = message.product);
    message.pricePerUnit !== undefined && (obj.pricePerUnit = message.pricePerUnit);
    message.quantity !== undefined && (obj.quantity = Math.round(message.quantity));
    message.vat !== undefined && (obj.vat = message.vat);
    message.amount !== undefined && (obj.amount = message.amount);
    message.contractStartDate !== undefined && (obj.contractStartDate = message.contractStartDate);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoiceRow>): InvoiceRow {
    const message = createBaseInvoiceRow();
    message.product = object.product ?? "";
    message.pricePerUnit = object.pricePerUnit ?? 0;
    message.quantity = object.quantity ?? 0;
    message.vat = object.vat ?? "";
    message.amount = object.amount ?? 0;
    message.contractStartDate = object.contractStartDate ?? 0;
    return message;
  },
};

function createBaseInvoicePrice(): InvoicePrice {
  return { gross: 0, net: 0 };
}

export const InvoicePrice = {
  encode(message: InvoicePrice, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.gross !== 0) {
      writer.uint32(9).double(message.gross);
    }
    if (message.net !== 0) {
      writer.uint32(17).double(message.net);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicePrice {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicePrice();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.gross = reader.double();
          break;
        case 2:
          message.net = reader.double();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicePrice {
    return { gross: isSet(object.gross) ? Number(object.gross) : 0, net: isSet(object.net) ? Number(object.net) : 0 };
  },

  toJSON(message: InvoicePrice): unknown {
    const obj: any = {};
    message.gross !== undefined && (obj.gross = message.gross);
    message.net !== undefined && (obj.net = message.net);
    return obj;
  },

  fromPartial(object: DeepPartial<InvoicePrice>): InvoicePrice {
    const message = createBaseInvoicePrice();
    message.gross = object.gross ?? 0;
    message.net = object.net ?? 0;
    return message;
  },
};

function createBaseTriggerInvoices(): TriggerInvoices {
  return { ids: [] };
}

export const TriggerInvoices = {
  encode(message: TriggerInvoices, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.ids) {
      writer.uint32(10).string(v!);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): TriggerInvoices {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseTriggerInvoices();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.ids.push(reader.string());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): TriggerInvoices {
    return { ids: Array.isArray(object?.ids) ? object.ids.map((e: any) => String(e)) : [] };
  },

  toJSON(message: TriggerInvoices): unknown {
    const obj: any = {};
    if (message.ids) {
      obj.ids = message.ids.map((e) => e);
    } else {
      obj.ids = [];
    }
    return obj;
  },

  fromPartial(object: DeepPartial<TriggerInvoices>): TriggerInvoices {
    const message = createBaseTriggerInvoices();
    message.ids = object.ids?.map((e) => e) || [];
    return message;
  },
};

/** Microservice definition. */
export type ServiceDefinition = typeof ServiceDefinition;
export const ServiceDefinition = {
  name: "Service",
  fullName: "io.restorecommerce.invoice.Service",
  methods: {
    read: {
      name: "Read",
      requestType: ReadRequest,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    create: {
      name: "Create",
      requestType: InvoiceList,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    delete: {
      name: "Delete",
      requestType: DeleteRequest,
      requestStream: false,
      responseType: DeleteResponse,
      responseStream: false,
      options: {},
    },
    update: {
      name: "Update",
      requestType: InvoiceList,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    upsert: {
      name: "Upsert",
      requestType: InvoiceList,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    generateInvoiceNumber: {
      name: "GenerateInvoiceNumber",
      requestType: RequestInvoiceNumber,
      requestStream: false,
      responseType: InvoiceNumberResponse,
      responseStream: false,
      options: {},
    },
  },
} as const;

export interface ServiceServiceImplementation<CallContextExt = {}> {
  read(request: ReadRequest, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  create(request: InvoiceList, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  delete(request: DeleteRequest, context: CallContext & CallContextExt): Promise<DeepPartial<DeleteResponse>>;
  update(request: InvoiceList, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  upsert(request: InvoiceList, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  generateInvoiceNumber(
    request: RequestInvoiceNumber,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<InvoiceNumberResponse>>;
}

export interface ServiceClient<CallOptionsExt = {}> {
  read(request: DeepPartial<ReadRequest>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  create(request: DeepPartial<InvoiceList>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  delete(request: DeepPartial<DeleteRequest>, options?: CallOptions & CallOptionsExt): Promise<DeleteResponse>;
  update(request: DeepPartial<InvoiceList>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  upsert(request: DeepPartial<InvoiceList>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  generateInvoiceNumber(
    request: DeepPartial<RequestInvoiceNumber>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<InvoiceNumberResponse>;
}

type ProtoMetaMessageOptions = {
  options?: { [key: string]: any };
  fields?: { [key: string]: { [key: string]: any } };
  oneof?: { [key: string]: { [key: string]: any } };
  nested?: { [key: string]: ProtoMetaMessageOptions };
};

export interface ProtoMetadata {
  fileDescriptor: FileDescriptorProto1;
  references: { [key: string]: any };
  dependencies?: ProtoMetadata[];
  options?: {
    options?: { [key: string]: any };
    services?: {
      [key: string]: { options?: { [key: string]: any }; methods?: { [key: string]: { [key: string]: any } } };
    };
    messages?: { [key: string]: ProtoMetaMessageOptions };
    enums?: { [key: string]: { options?: { [key: string]: any }; values?: { [key: string]: { [key: string]: any } } } };
  };
}

export const protoMetadata: ProtoMetadata = {
  fileDescriptor: FileDescriptorProto1.fromPartial({
    "name": "io/restorecommerce/invoice.proto",
    "package": "io.restorecommerce.invoice",
    "dependency": [
      "io/restorecommerce/resource_base.proto",
      "io/restorecommerce/meta.proto",
      "io/restorecommerce/organization.proto",
      "io/restorecommerce/auth.proto",
      "google/protobuf/any.proto",
      "io/restorecommerce/status.proto",
      "io/restorecommerce/options.proto",
      "io/restorecommerce/customer.proto",
    ],
    "publicDependency": [],
    "weakDependency": [],
    "messageType": [{
      "name": "RequestInvoiceNumber",
      "field": [{
        "name": "context",
        "number": 1,
        "label": 1,
        "type": 11,
        "typeName": ".google.protobuf.Any",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "context",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "subject",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.auth.Subject",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "subject",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceNumberResponse",
      "field": [{
        "name": "invoice_no",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoiceNo",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "Deleted",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceList",
      "field": [{
        "name": "items",
        "number": 1,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.Invoice",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "items",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "total_count",
        "number": 2,
        "label": 1,
        "type": 13,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "totalCount",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "subject",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.auth.Subject",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "subject",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceListResponse",
      "field": [{
        "name": "items",
        "number": 1,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoiceResponse",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "items",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "total_count",
        "number": 2,
        "label": 1,
        "type": 13,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "totalCount",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "operation_status",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.status.OperationStatus",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "operationStatus",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceResponse",
      "field": [{
        "name": "payload",
        "number": 1,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.Invoice",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "payload",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "status",
        "number": 2,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.status.Status",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "status",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "Invoice",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "meta",
        "number": 2,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.meta.Meta",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "meta",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "timestamp",
        "number": 4,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "timestamp",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "customer_id",
        "number": 5,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "customerId",
        "options": {
          "ctype": 0,
          "packed": false,
          "jstype": 0,
          "lazy": false,
          "deprecated": false,
          "weak": false,
          "uninterpretedOption": [],
        },
        "proto3Optional": false,
      }, {
        "name": "payment_status",
        "number": 6,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "paymentStatus",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "total_amount",
        "number": 7,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "totalAmount",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "net_amount",
        "number": 8,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "netAmount",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "vat_amount",
        "number": 9,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "vatAmount",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "document",
        "number": 10,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "document",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "invoice_number",
        "number": 11,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoiceNumber",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "customer_remark",
        "number": 12,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "customerRemark",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicesPositionsData",
      "field": [{
        "name": "invoices_positions_data",
        "number": 1,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoicePositions",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoicesPositionsData",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicePositions",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "invoice_positions",
        "number": 2,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoicePosition",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoicePositions",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "recipient_customer",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.RecipientCustomer",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "recipientCustomer",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "recipient_billing_address",
        "number": 4,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.BillingAddress",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "recipientBillingAddress",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "sender_billing_address",
        "number": 5,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.BillingAddress",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "senderBillingAddress",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "recipient_organization",
        "number": 6,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.organization.Organization",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "recipientOrganization",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "sender_organization",
        "number": 7,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.organization.Organization",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "senderOrganization",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "payment_method_details",
        "number": 8,
        "label": 1,
        "type": 11,
        "typeName": ".google.protobuf.Any",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "paymentMethodDetails",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "invoice_no",
        "number": 9,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoiceNo",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "from_date",
        "number": 10,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "fromDate",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "to_date",
        "number": 11,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "toDate",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "RecipientCustomer",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "customer_number",
        "number": 2,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "customerNumber",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "BillingAddress",
      "field": [{
        "name": "email",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "email",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "website",
        "number": 2,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "website",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "street",
        "number": 3,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "street",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "building_number",
        "number": 4,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "buildingNumber",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "postcode",
        "number": 5,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "postcode",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "region",
        "number": 6,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "region",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "country_name",
        "number": 7,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "countryName",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "telephone",
        "number": 9,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "telephone",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "timezone",
        "number": 10,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "timezone",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "economic_area",
        "number": 11,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "economicArea",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "locality",
        "number": 12,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "locality",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "organization_name",
        "number": 13,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "organizationName",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicePosition",
      "field": [{
        "name": "currency",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "currency",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "tableList",
        "number": 2,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoiceRow",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "tableList",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "totalPrice",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoicePrice",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "totalPrice",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceRow",
      "field": [{
        "name": "product",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "product",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "pricePerUnit",
        "number": 2,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "pricePerUnit",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "quantity",
        "number": 3,
        "label": 1,
        "type": 13,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "quantity",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "vat",
        "number": 4,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "vat",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "amount",
        "number": 5,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "amount",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "contract_start_date",
        "number": 6,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "contractStartDate",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicePrice",
      "field": [{
        "name": "gross",
        "number": 1,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "gross",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "net",
        "number": 2,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "net",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "TriggerInvoices",
      "field": [{
        "name": "ids",
        "number": 1,
        "label": 3,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "ids",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }],
    "enumType": [],
    "service": [{
      "name": "Service",
      "method": [{
        "name": "Read",
        "inputType": ".io.restorecommerce.resourcebase.ReadRequest",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": { "deprecated": false, "idempotencyLevel": 0, "uninterpretedOption": [] },
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Create",
        "inputType": ".io.restorecommerce.invoice.InvoiceList",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Delete",
        "inputType": ".io.restorecommerce.resourcebase.DeleteRequest",
        "outputType": ".io.restorecommerce.resourcebase.DeleteResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Update",
        "inputType": ".io.restorecommerce.invoice.InvoiceList",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Upsert",
        "inputType": ".io.restorecommerce.invoice.InvoiceList",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "GenerateInvoiceNumber",
        "inputType": ".io.restorecommerce.invoice.RequestInvoiceNumber",
        "outputType": ".io.restorecommerce.invoice.InvoiceNumberResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }],
      "options": { "deprecated": false, "uninterpretedOption": [] },
    }],
    "extension": [],
    "options": undefined,
    "sourceCodeInfo": {
      "location": [{
        "path": [3, 7],
        "span": [13, 0, 43],
        "leadingComments": " Used by resolvers\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [6, 0],
        "span": [18, 0, 29, 1],
        "leadingComments": "\n Microservice definition.\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 3],
        "span": [47, 0, 51, 1],
        "leadingComments": "\n For multiple invoices\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 6],
        "span": [67, 0, 87, 1],
        "leadingComments": "\n A simple invoice.\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 6, 2, 7],
        "span": [83, 2, 24],
        "leadingComments": "",
        "trailingComments": " difference between net and total\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 7],
        "span": [92, 0, 94, 1],
        "leadingComments": "*\n List of Invoice Positions data\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 0],
        "span": [97, 2, 16],
        "leadingComments": "",
        "trailingComments": " contract or customer identifier\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 8],
        "span": [105, 2, 24],
        "leadingComments": "",
        "trailingComments": " optional invoice number if not it will be generated by service\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 9],
        "span": [106, 2, 24],
        "leadingComments": "",
        "trailingComments": " value performance from date\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 10],
        "span": [107, 2, 22],
        "leadingComments": "",
        "trailingComments": " value performance to date\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 9, 2, 0],
        "span": [111, 2, 16],
        "leadingComments": "",
        "trailingComments": " customer id - used to store the resource in DB\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 9, 2, 1],
        "span": [112, 2, 29],
        "leadingComments": "",
        "trailingComments": " displayed in invoice\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 12, 2, 5],
        "span": [142, 2, 33],
        "leadingComments": "",
        "trailingComments": " if there is any contract associated with product\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 14, 2, 0],
        "span": [151, 2, 26],
        "leadingComments": "",
        "trailingComments": " list of id referring to contract_ids or customer_ids\n",
        "leadingDetachedComments": [],
      }],
    },
    "syntax": "proto3",
  }),
  references: {
    ".io.restorecommerce.invoice.RequestInvoiceNumber": RequestInvoiceNumber,
    ".io.restorecommerce.invoice.InvoiceNumberResponse": InvoiceNumberResponse,
    ".io.restorecommerce.invoice.Deleted": Deleted,
    ".io.restorecommerce.invoice.InvoiceList": InvoiceList,
    ".io.restorecommerce.invoice.InvoiceListResponse": InvoiceListResponse,
    ".io.restorecommerce.invoice.InvoiceResponse": InvoiceResponse,
    ".io.restorecommerce.invoice.Invoice": Invoice,
    ".io.restorecommerce.invoice.InvoicesPositionsData": InvoicesPositionsData,
    ".io.restorecommerce.invoice.InvoicePositions": InvoicePositions,
    ".io.restorecommerce.invoice.RecipientCustomer": RecipientCustomer,
    ".io.restorecommerce.invoice.BillingAddress": BillingAddress,
    ".io.restorecommerce.invoice.InvoicePosition": InvoicePosition,
    ".io.restorecommerce.invoice.InvoiceRow": InvoiceRow,
    ".io.restorecommerce.invoice.InvoicePrice": InvoicePrice,
    ".io.restorecommerce.invoice.TriggerInvoices": TriggerInvoices,
  },
  dependencies: [
    protoMetadata1,
    protoMetadata2,
    protoMetadata3,
    protoMetadata4,
    protoMetadata5,
    protoMetadata6,
    protoMetadata7,
    protoMetadata8,
  ],
  options: {
    messages: {
      "Invoice": {
        fields: {
          "customer_id": {
            "resolver": Resolver.decode(
              Buffer.from(
                "CiUuaW8ucmVzdG9yZWNvbW1lcmNlLmN1c3RvbWVyLkN1c3RvbWVyEghyZXNvdXJjZRoIY3VzdG9tZXIiBFJlYWQqCGN1c3RvbWVy",
                "base64",
              ),
            ),
          },
        },
      },
    },
    services: { "Service": { options: { "service_name": "invoice" }, methods: { "Read": { "is_query": true } } } },
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
